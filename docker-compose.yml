services:
  # Backend service - Node.js server with MediaSoup
  backend:
    image: seminlev/webrtc-backend:latest
    container_name: webrtc-backend
    # Remove direct port exposure - all traffic goes through frontend nginx
    expose:
      - "3001"
      - "40000-40100/udp"
      - "40000-40100/tcp"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3001}
      - SERVER_HOST=${SERVER_HOST:-0.0.0.0}
      - CORS_ORIGIN=${CORS_ORIGIN:-https://${DOMAIN:-localhost}}
      - MEDIASOUP_ANNOUNCED_IP=${MEDIASOUP_ANNOUNCED_IP:-${DOMAIN:-localhost}}
      - MEDIASOUP_MIN_PORT=${MEDIASOUP_MIN_PORT:-40000}
      - MEDIASOUP_MAX_PORT=${MEDIASOUP_MAX_PORT:-40100}
      - EXTERNAL_DOMAIN=${EXTERNAL_DOMAIN:-${DOMAIN:-localhost}}
    networks:
      - webrtc-network
    restart: unless-stopped

  # Certbot service for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ssl_certs:/etc/letsencrypt
      - certbot_webroot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${EMAIL} --agree-tos --no-eff-email -d ${DOMAIN}
    depends_on:
      - frontend
    profiles:
      - ssl

  # Certbot renewal service
  certbot-renew:
    image: certbot/certbot
    container_name: certbot-renew
    volumes:
      - ssl_certs:/etc/letsencrypt
      - certbot_webroot:/var/www/certbot
    command: renew --webroot --webroot-path=/var/www/certbot
    profiles:
      - ssl

  # Frontend service - React app with Nginx
  frontend:
    image: seminlev/webrtc-frontend:latest
    container_name: webrtc-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ssl_certs:/etc/nginx/ssl:ro
      - certbot_webroot:/var/www/certbot
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    networks:
      - webrtc-network
    restart: unless-stopped

networks:
  webrtc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  ssl_certs:
    driver: local
  certbot_webroot:
    driver: local
